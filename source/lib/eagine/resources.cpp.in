///
/// Copyright Matus Chochlik.
/// Distributed under the Boost Software License, Version 1.0.
/// See accompanying file LICENSE_1_0.txt or copy at
///  http://www.boost.org/LICENSE_1_0.txt
///
// clang-format off
#include "prologue.inl"
#include <eagine/application_config.hpp>
#include <eagine/compression.hpp>
#include <eagine/file_contents.hpp>
#include <eagine/input_data.hpp>
#include <eagine/logging/entry.hpp>
#include <eagine/logging/root_logger.hpp>
#include <eagine/main_ctx.hpp>
#include <eagine/system_info.hpp>
#include <eagine/user_info.hpp>
#include "implement.inl"

#include <eagine/message_bus/resources.hpp>
#include "lib_common_pki.hpp"

namespace eagine {
//------------------------------------------------------------------------------
EAGINE_LIB_FUNC
auto ca_certificate_pem(main_ctx& ctx) -> memory::const_block {
    return ca_certificate_pem(
      eagine::embed(EAGINE_ID(eagiCaCert), "@EAGINE_EMBED_CA_CERT@"), ctx);
}
//------------------------------------------------------------------------------
EAGINE_LIB_FUNC
auto msgbus_router_certificate_pem(main_ctx& ctx) -> memory::const_block {
    return msgbus::router_certificate_pem(
      eagine::embed(EAGINE_ID(mbusRtrCrt), "@EAGINE_EMBED_ROUTER_CERT@"), ctx);
}
//------------------------------------------------------------------------------
EAGINE_LIB_FUNC
auto msgbus_bridge_certificate_pem(main_ctx& ctx) -> memory::const_block {
    return msgbus::bridge_certificate_pem(
      eagine::embed(EAGINE_ID(mbusRtrCrt), "@EAGINE_EMBED_BRIDGE_CERT@"), ctx);
}
//------------------------------------------------------------------------------
EAGINE_LIB_FUNC
auto msgbus_endpoint_certificate_pem(main_ctx& ctx) -> memory::const_block {
    return msgbus::endpoint_certificate_pem(
      eagine::embed(EAGINE_ID(mbusEptCrt), "@EAGINE_EMBED_ENDPOINT_CERT@"),
      ctx);
}
//------------------------------------------------------------------------------
} // namespace eagine

#include "epilogue.inl"
